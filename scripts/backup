#!/bin/bash

# Check if the required number of arguments is provided
if [ $# -lt 1 ] || [ $# -gt 2 ]; then
  echo "Usage: backup  directory_path [archive_path]"
  exit 1
fi

# Get the absolute path of the source
source_full=$(readlink -f "$1")
source_dir=$(dirname "$source_full")
source_base=$(basename "$source_full")

timestamp=$(date +'%Y-%m-%d-%H-%M')
dest_base="${source_base}_${timestamp}.tar.xz"

# Get the absolute path of the destination
if [ $# -eq 2 ]; then
  # Use the provided archive_path if available
  dest_dir=$(readlink -f "$2")
else
  # Use the same directory as the source for the archive
  dest_dir="$source_dir"
fi
dest_full="${dest_dir}/${dest_base}"

cd "$source_dir"
pwd
echo "$source_base" 
echo "$dest_full"
tar -vv -cf - "$source_base" | xz -9zve -T0 > "$dest_full"

# Check if the command executed successfully
if [ $? -eq 0 ]; then
  echo "Archive created successfully: $dest_path_archive"
else
  echo "Archive creation failed!"
fi

# 
# # Get the absolute path of the source directory
# source_path=$(cd "$1" && pwd)
# 
# # Determine the destination path
# if [ $# -eq 2 ]; then
#   # Use the provided archive_path if available
#   dest_path=$(cd "$2" && pwd)
# else
#   # Use the same directory as the source for the archive
#   dest_path=$(dirname "$source_path")
# fi
# 
# # Create the archive file name with the current timestamp
# file_name=$(basename "$source_path")
# timestamp=$(date +'%Y-%m-%d-%H-%M')
# archive_name="${file_name}_${timestamp}.tar.xz"
# 
# # Combine the destination path and archive name
# dest_path_archive="${dest_path}/${archive_name}"
# 
# # Execute the tar and xz commands to create the archive
# tar -vv -cf - "$source_path" | xz -9zve -T0 > "$dest_path_archive"
# 
# # Check if the command executed successfully
# if [ $? -eq 0 ]; then
#   echo "Archive created successfully: $dest_path_archive"
# else
#   echo "Archive creation failed!"
# fi
